---

# A general play that can operate outside of the main deployment.
# It gets the Keycloak admin user and password (from the well-known secrets)
# and then gets an API token from the server.
#
# This play expects the following: -
#
# - iu_hostname to be set (i.e. 'example.com')
# - realm (not iu_realm) to be set (i.e. 'master' or some such)
# - realm_user and realm_user_password (for the realm)
#
# In return, this play sets the facts: -
#
# - iu_token

- name: Assert token control variables
  assert:
    that:
    - realm is defined
    - realm|length > 0
    - realm_user is defined
    - realm_user|length > 0
    - realm_user_password is defined
    - realm_user_password|length > 0

- name: Get Keycloak API token ({{ realm }} realm)
  uri:
    url: https://{{ iu_hostname }}/auth/realms/{{ realm }}/protocol/openid-connect/token
    method: POST
    body: "{{ credentials }}&grant_type=password&client_id=admin-cli"
    headers:
      Content-Type: application/x-www-form-urlencoded
  register: token_result
  vars:
    credentials: username={{ realm_user }}&password={{ realm_user_password }}
  until: >-
    token_result.json is defined
    and token_result.json.access_token is defined
  delay: 4
  retries: "{{ (iu_token_timeout|int / 4)|int }}"
  changed_when: no

- name: Set Keycloak API token fact
  set_fact:
    iu_token: "{{ token_result.json.access_token }}"
